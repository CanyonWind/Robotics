<launch>
 <rosparam file="$(find prx_input)/templates/spaces/space_types.yaml"/>

<rosparam ns="simulation" file="$(find prx_input)/templates/applications/empty_application.yaml"/>
<rosparam ns="simulation" file="$(find prx_input)/templates/simulators/collision_stop_simulator.yaml"/>
<rosparam ns="simulation/controller" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
<rosparam ns="simulation/waypoint_template" file="$(find prx_input)/templates/controllers/waypoint_controller.yaml"/>
<rosparam ns="simulation/obstacle_template" file="$(find prx_input)/templates/plants/disk.yaml"/>
<rosparam ns="simulation/plant" file="$(find prx_input)/templates/plants/car.yaml"/>

<rosparam ns="simulation/simulator/subsystems/consumer">
  template: "controller"
  keep_last_control: false
  keep_last_state: true
</rosparam>
<rosparam ns="simulation/simulator/subsystems/consumer/subsystems/rover">
template: "plant"
initial_state: [-80,0,0]
</rosparam>
<rosparam ns="simulation/simulator/obstacles" file="$(find prx_input)/templates/environments/intersection.yaml"/>


<!-- obstacle -->
<rosparam ns="simulation/simulator/subsystems/waypoints1">
  template: "waypoint_template"
  waypoints: 
    -
      state: [-60,0,   90,10,   70,10,   0,85,   0,65,   10,-85,   10,-65]
    -
      state: [70,0,   -70,10,   -80,10,   0,-70,   0,-80,   10,70,   10,80]
</rosparam>
<rosparam ns="simulation/simulator/subsystems/waypoints1/subsystems/router" file="$(find prx_input)/templates/controllers/router.yaml" />

<rosparam ns="simulation/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk1">
template: "obstacle_template"
initial_state: [-60,0]
</rosparam>
<rosparam ns="simulation/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk2">
template: "obstacle_template"
initial_state: [90,10]
</rosparam>
<rosparam ns="simulation/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk3">
template: "obstacle_template"
initial_state: [70,10]
</rosparam>
<rosparam ns="simulation/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk4">
template: "obstacle_template"
initial_state: [0,85]
</rosparam>
<rosparam ns="simulation/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk5">
template: "obstacle_template"
initial_state: [0,65]
</rosparam>
<rosparam ns="simulation/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk6">
template: "obstacle_template"
initial_state: [10,-85]
</rosparam>
<rosparam ns="simulation/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk7">
template: "obstacle_template"
initial_state: [10,-65]
</rosparam>

<rosparam ns="planning/waypoint_template" file="$(find prx_input)/templates/controllers/waypoint_controller.yaml"/>
<rosparam ns="planning/obstacle_template" file="$(find prx_input)/templates/plants/disk.yaml"/>
  <rosparam ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml"/>

<rosparam ns="planning">
random_seed: 34378
consumer_mapping:
  - 
    pair: [simulator/consumer, space1]
</rosparam>
        
  <!-- Load template files -->
       
  <rosparam ns="planning/motion_planner/" file="$(find prx_input)/templates/motion_planners/sst.yaml"/>
 
  <rosparam ns="planning/task_planner/" file="$(find prx_input)/templates/task_planners/single_shot.yaml"/>

  <rosparam ns="planning/task_planner/" >
  </rosparam>

<rosparam ns="planning/task_planner/planners/" >
planner1:
  template: "motion_planner"
  type: sst
  space_name: "space1"
  visualization_body: "simulator/rover/chassis"
  visualize_tree: false
  visualize_solution: true
  sample_metric:
    type: graph_distance_metric
  max_points: 500001
  delta_drain: 5
  steering: false
  delta_near: 6
</rosparam>
       
  <rosparam ns="planning/query_type" file="$(find prx_input)/templates/queries/motion_planning_query.yaml"/>
<rosparam ns="planning/problems">
problem1:
  specification:
    type: motion_planning_specification
    validity_checker: 
      type: world_model_validity_checker
    sampler:
      type: uniform_sampler
    distance_metric:
      type: graph_distance_metric
    local_planner:
      type: time_varying_local_planner
      lower_multiple: 10
      upper_multiple: 70
    seeds:
      -
        state: [-80,0,0]
    stopping_criteria:
      elements:
        criterion1:
          type: iteration_criterion
          condition: 150000
  query:
    template: "query_type"
    start_state: [-80,0,0]
    goal:
      type: "radial_goal_region"
      distance_metric:
        type: ann_distance_metric
      goal_state: [80,0,0]
      radius: 5
</rosparam>

<rosparam ns="planning">
  system_mapping:
  - 
    pair: [simulator/consumer/rover, world_model/simulator/rover]

  consumer: simulator/consumer
</rosparam>

<rosparam ns="planning/world_model/planning_contexts">
space1:
  use_embedded_space: true
  default:
    type: "obstacle_mapping"
</rosparam>

<rosparam ns="planning/world_model" file="$(find prx_input)/templates/simulators/collision_stop_simulator.yaml"/>

<rosparam ns="planning/world_model/simulator/subsystems/rover" file="$(find prx_input)/templates/plants/car.yaml"/>

<rosparam ns="planning/world_model/simulator/subsystems/rover">
  planning_contexts:
    space1:
      type: full_mapping
</rosparam>


<!-- obstacle -->
<rosparam ns="planning/world_model/simulator/subsystems/waypoints1">
  template: "waypoint_template"
  waypoints: 
    -
      state: [-60,0,   90,10,   70,10,   0,85,   0,65,   10,-85,   10,-65]
    -
      state: [70,0,   -70,10,   -80,10,   0,-70,   0,-80,   10,70,   10,80]
</rosparam>
<rosparam ns="planning/world_model/simulator/subsystems/waypoints1/subsystems/router" file="$(find prx_input)/templates/controllers/router.yaml" />

<rosparam ns="planning/world_model/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk1">
template: "obstacle_template"
initial_state: [-60,0]
</rosparam>
<rosparam ns="planning/world_model/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk2">
template: "obstacle_template"
initial_state: [90,10]
</rosparam>
<rosparam ns="planning/world_model/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk3">
template: "obstacle_template"
initial_state: [70,10]
</rosparam>
<rosparam ns="planning/world_model/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk4">
template: "obstacle_template"
initial_state: [0,85]
</rosparam>
<rosparam ns="planning/world_model/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk5">
template: "obstacle_template"
initial_state: [0,65]
</rosparam>
<rosparam ns="planning/world_model/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk6">
template: "obstacle_template"
initial_state: [10,-85]
</rosparam>
<rosparam ns="planning/world_model/simulator/subsystems/waypoints1/subsystems/router/subsystems/disk7">
template: "obstacle_template"
initial_state: [10,-65]
</rosparam>
<rosparam ns="planning/world_model/simulator/obstacles" file="$(find prx_input)/templates/environments/intersection.yaml"/>

<node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation"/>
<node name="planning" pkg="prx_planning" type="prx_planning" required="false" launch-prefix="" output="screen" args="planning" />
<include file="$(find prx_input)/templates/visualization/visualization.launch"/>


</launch>