<launch>
 <rosparam>
  <!-- First define the mapping between simulation and world model plants -->
  system_mapping:
  - 
    pair: [simulator/consumer/pendulum, world_model/simulator/pendulum]

  consumer: simulator/consumer
  </rosparam>

  <!-- 	First define the embedding names you are going to use. 
	This part of the file only specifies the default mapping function
	for things that don't define a mapping.-->
  <rosparam ns="world_model/embeddings">
  space1:
    default:
      type: "full_mapping"
  </rosparam>

  <!-- This file is reincluded for the event where planning runs without simulation-->
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <!-- Specify the internal simulator and systems the world model will use -->
  <rosparam ns="world_model" command="load" file="$(find prx_input)/templates/simulators/collision_stop_simulator.yaml"/>

  <!-- 	Set up concrete system tree. For each system with state, you can define an embedding for that state.
	Otherwise, the default from above is used. -->
        
  <rosparam command="load" ns="world_model/simulator/subsystems/pendulum" file="$(find prx_input)/templates/plants/simple_pendulum.yaml"/>

  <rosparam command="load" ns="world_model/simulator/subsystems/pendulum">
    state_space: 
      min: [-4,-5]
      max: [4,5]
    input_control_space: 
      min: [-10]
      max: [ 10]
  </rosparam>

</launch>
