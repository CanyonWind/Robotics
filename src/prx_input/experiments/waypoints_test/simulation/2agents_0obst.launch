<launch>

  <!-- Load independent files -->
        
  <rosparam command="load" file="$(find VO)/input/templates/vo_application.yaml"/>
  <rosparam command="load" file="$(find prx_input)/templates/simulators/collision_stop_simulator.yaml"/>

  <!-- Load template files -->
        
  <rosparam command="load" ns="consumer_controller" file="$(find prx_input)/templates/controllers/waypoints.yaml"/>
  <rosparam command="load" ns="plant" file="$(find prx_input)/templates/plants/disk.yaml"/>
  <rosparam command="load" ns="vo_controller" file="$(find VO)/input/templates/vo_controller.yaml"/>
  
  <!-- Override template parameters -->
        
  <rosparam ns="consumer_controller">
  </rosparam>
        
  <rosparam ns="plant">
    initial_state: [0,0]
    state_space: 
      min: [-200, -200]
      max: [200, 200]
    input_control_space:
      min: [0, -4]
      max: [25, 4]
  </rosparam>
       
  <rosparam ns="vo_controller"> 
    state_space: 
      min: [-200, -200]
      max: [200, 200]
  </rosparam>
              
  <!-- Set up concrete system tree -->
              
  <rosparam command="load" ns="simulator">
    simulation_step: 0.02
  </rosparam>
   
  <rosparam command="load" ns="simulator/subsystems/consumer">
    template: consumer_controller
    planning_node: /planning
    keep_last_control: false
    goals:
      -
        goal:
            type: "radial_goal_region"
            distance_metric:
                type: linear_distance_metric
            goal_state: [75,-25]
            radius: .5
                        
  </rosparam>
                    
                    
  <rosparam command="load" ns="simulator/subsystems/consumer/subsystems/vo_controller/">
    template: vo_controller
  </rosparam>
        
  <rosparam command="load" ns="simulator/subsystems/consumer/subsystems/vo_controller/subsystems/disk">
    template: plant
    initial_state: [-75,25]
  </rosparam>
            
  <rosparam command="load" ns="simulator/subsystems/consumer2">
    template: consumer_controller
    planning_node: /planning2
    keep_last_control: false
    goals:
      -
        goal:
            type: "radial_goal_region"
            distance_metric:
                type: linear_distance_metric
            goal_state: [10,5]
            radius: 1.9
                        
  </rosparam>
                    
  <rosparam command="load" ns="simulator/subsystems/consumer2/subsystems/vo_controller2/">
    template: vo_controller
  </rosparam>
        
  <rosparam command="load" ns="simulator/subsystems/consumer2/subsystems/vo_controller2/subsystems/disk2">
    template: plant
    initial_state: [75,-25]
  </rosparam>
         
  <rosparam command="load" ns="/simulator/obstacles"
     file="$(find prx_input)/templates/environments/forest.yaml"/>
            
</launch>
